"""empty message

Revision ID: 1e1f0219f598
Revises: d1222d1b2e21
Create Date: 2024-01-27 17:42:05.575720

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1e1f0219f598'
down_revision = 'd1222d1b2e21'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('parents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=False),
    sa.Column('email_parent', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_parent')
    )
    op.create_table('professors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=False),
    sa.Column('email_professor', sa.String(), nullable=True),
    sa.Column('rol', sa.Enum('admin', 'professor', name='is_admin'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_professor')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True, back_populates='student'),
    sa.ForeignKeyConstraint(['parent_id'], ['parents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('global_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('Festivo', 'Evento', 'Huelga', 'Notificación especial', name='type_enum'), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('url_img', sa.String(), nullable=True),
    sa.Column('professor_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['professor_id'], ['professors.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_group', sa.String(), nullable=False),
    sa.Column('professor_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['professor_id'], ['professors.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('eat', sa.Enum('Comió bien', 'Comió poco', 'No comió', name='eat_enum'), nullable=True),
    sa.Column('sleep', sa.Enum('Durmió bien', 'Durmió poco', 'no Durmió', name='sleep_enum'), nullable=True),
    sa.Column('poop', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('professor_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['professor_id'], ['professors.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('association',
    sa.Column('Students', sa.Integer(), nullable=False),
    sa.Column('GlobalNotifications', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['GlobalNotifications'], ['global_notifications.id'], ),
    sa.ForeignKeyConstraint(['Students'], ['students.id'], ),
    sa.PrimaryKeyConstraint('Students', 'GlobalNotifications')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_professor', sa.Boolean(), nullable=False))
        batch_op.drop_column('is_active')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.drop_column('is_professor')

    op.drop_table('association')
    op.drop_table('notifications')
    op.drop_table('groups')
    op.drop_table('global_notifications')
    op.drop_table('students')
    op.drop_table('professors')
    op.drop_table('parents')
    # ### end Alembic commands ###
